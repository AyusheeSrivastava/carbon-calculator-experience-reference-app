openapi: 3.0.3
info:
  title: Priceless Planet Carbon Tracker API
  description: |
    OpenAPI document for Priceless Planet Carbon Tracker Service. This API allows issuers to enrol their customers onto Priceless Planet Carbon Tracker platform so that they can get carbon footprint for their transactions and offset the same by donating for planting tree.

    In addition, this API also allows issuers to retrieve carbon footprint aggregate data for their customers.
      <br/>
    ---
    * **All requests must be signed using OAuth 1.0a. Please refer to [Access Mastercard APIs](https://developer.mastercard.com/platform/documentation/using-oauth-1a-to-access-mastercard-apis/).**
    ---
    * **The issuer must provide their user's card details and email address while enrolment. These details must be encrypted before entering transit. Please refer to the [Payload Encryption](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/).**
    ---

  contact:
    name: API Support
    url: https://developer.mastercard.com/
    email: apisupport@mastercard.com
  version: '1.0.0'
servers:
  - url: https://api.mastercard.com/carbontracker
    description: Production
  - url: https://sandbox.api.mastercard.com/carbontracker
    description: Sandbox
tags:
  - name: Issuer
    description: Contains APIs which will be consumed by the Issuer's backend system.


paths:
  /issuers/users:
    post:
      tags:
        - Issuer
      summary: Allows issuer to enrol their customers onto Priceless Planet Carbon Tracker platform.
      description: Used to enrol users for Priceless Planet Carbon Tracker so that they can track the carbon usage for their transactions and offset the same by donating for planting tree.
      operationId: UserRegistration
      x-mastercard-api-encrypted: true
      requestBody:
        $ref: '#/components/requestBodies/UserProfile'
      responses:
        "200":
          $ref: '#/components/responses/UserReference'
        "400":
          $ref: '#/components/responses/UserEnrolmentBadRequestError'

  /issuers/users/{userid}/dashboards:
    get:
      tags:
        - Issuer
      summary: Used to retrieve Short-Lived URL of user's dashboard to view their carbon footprints and contributions to Priceless Planet.
      description: Allows issuers to retrieve Short-Lived URL for an enrolled user. Issuer needs to load this URL within their application so that user can view their dashboard containing carbon footprints and donation.
      operationId: GetAuthToken
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        "200":
          $ref: '#/components/responses/Dashboard'
        "400":
          $ref: '#/components/responses/BadRequestError'
        "404":
          $ref: '#/components/responses/UserNotFoundError'

  /issuers/users/{userid}/aggregate-carbon-scores:
    get:
      tags:
        - Issuer
      summary: Fetches monthly aggregate carbon score for the transactions.
      description: Allows issuers to retrieve an aggregate carbon footprint for the transactions done by a user.
      operationId: GetAggregateCarbonScore
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        "200":
          $ref: '#/components/responses/AggregateCarbonScore'
        "400":
          $ref: '#/components/responses/BadRequestError'
        "404":
          $ref: '#/components/responses/UserNotFoundError'
components:
  requestBodies:
    UserProfile:
      description: User's Personal and Card information which needs to be registered onto Priceless Planet Carbon Tracker platform. This endpoint uses Mastercard payload encryption. Please refer to the **[Payload Encryption](https://mstr.cd/2UPfda0)** page for implementation details.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserProfile'
  schemas:
    UserProfile:
      title: UserProfile
      type: object
      description: The request object for enrolling a new user onto Priceless Planet Carbon Tracker platform.
      required:
        - cardNumber
        - billingAddress
        - email
        - locale
        - name
        - expiryInfo
        - cardBaseCurrency
        - cardholderName
      properties:
        email:
          $ref: '#/components/schemas/Email'
        name:
          $ref: '#/components/schemas/UserName'
        cardholderName:
          type: string
          description: Name of the card holder. (format- First Name Last Name)
          minLength: 1
          maxLength: 100
          example: John Doe
        cardNumber:
          $ref: '#/components/schemas/CardNumber'
        cardBaseCurrency:
          $ref: '#/components/schemas/CurrencyCode'
        expiryInfo:
          $ref: '#/components/schemas/CardExpiry'
        billingAddress:
          $ref: '#/components/schemas/Address'
        locale:
          type: string
          description: User locale which is registered with issuer.
          minLength: 1
          maxLength: 100
          example: en-US
    CurrencyCode:
      title: currencyCode
      type: string
      description: Currency code as per ISO 4217
      maxLength: 3
      minLength: 3
      pattern: '^[A-Za-z]{3}$'
      example: EUR
    CardExpiry:
      type: object
      properties:
        month:
          type: string
          example: 10
          description: Denotes a month by when the card will be expired.
          pattern: '^[0-9]{2}$'
        year:
          type: string
          description: Denotes a year by when the card will be expired.
          example: 2024
          pattern: '^[0-9]{4}$'
      title: CardExpiry
    CardNumber:
      type: string
      minLength: 16
      maxLength: 16
      pattern: '^\d{16}$'
      description: Original payment card number in full.
      example: 5344035171229750
    Address:
      type: object
      required:
        - country
        - postalCode
        - type
        - locality
      properties:
        country:
          description: The addresses country in two-character ISO 3166-1 alpha-2 format.
          type: string
          example: USA
          minLength: 1
          maxLength: 10
        locality:
          description: The city, district, suburb, town or village of the address.
          type: string
          minLength: 1
          maxLength: 100
          example: Rly Station
        postalCode:
          description: The address postal code, which is the zip code or equivalent.
          type: string
          example: 11746
          minLength: 1
          maxLength: 10
        region:
          type: string
          description: The region to which the address belongs to.
          example: Huntington
          minLength: 1
          maxLength: 100
        streetAddress:
          type: string
          description: Denotes street address.
          minLength: 1
          maxLength: 100
          example: 7832 West Elm Street
        type:
          type: string
          description: Denotes type of address. (e.g. home or work)
          example: 'work'
          minLength: 1
          maxLength: 100
      title: Address
    Email:
      type: object
      properties:
        type:
          type: string
          description: Denotes type of email (e.g. home)
          minLength: 1
          maxLength: 10
          example: home
        value:
          type: string
          description: Denotes email address.
          minLength: 5
          maxLength: 100
          example: John.Doe@mail.com
      title: Email
    UserName:
      type: object
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: string
          example: John
          minLength: 1
          maxLength: 100
          description: Denotes First name of user.
        lastName:
          type: string
          description: Denotes Last name of user.
          minLength: 1
          maxLength: 100
          example: Doe
      title: Username
    UserReference:
      title: UserReference
      type: object
      description: Successful user enrolment response
      required:
        - cardNumberLastFourDigits
        - status
        - userPPCTId
      properties:
        userid:
          $ref: '#/components/schemas/UserID'
        cardNumberLastFourDigits:
          type: string
          minLength: 4
          maxLength: 4
          pattern: '^\d{4}$'
          description: Last 4 digits of a full payment card number which was provided as enrolment request.
          example: 4363
        status:
          type: string
          minLength: 6
          maxLength: 7
          description: Status of a Payment Card on Priceless Planet Carbon Tracker platform. Possible values are ACTIVE &amp; DELETED.
          example: ACTIVE
    UserID:
      type: string
      minLength: 36
      maxLength: 36
      pattern: '^[0-9A-Fa-f-]{36}'
      description: Unique identifier for a user enrolled into Priceless Planet Carbon Tracker platform.
      example: f5d88571-ac15-465a-a0d8-1ad1327b9a06

    Dashboard:
      type: object
      properties:
        url:
          type: string
          description: This is the URL which needs to be rendered in web view.
          minLength: 1
          maxLength: 5000
          example: https://ppctwebview.b221.net/home/?auth_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        expiryInMillis:
          type: string
          description: Denotes expiry limit for the URL.
          minLength: 1
          maxLength: 10
          example: 300000
    AggregateCarbonScore:
      type: object
      properties:
        carbonEmissionInGrams:
          type: string
          description: An aggregate value of CO2 emission in grams.
          minLength: 1
          maxLength: 10
          example: 3245
        aggregateDate:
          type: string
          description: Denotes aggregate duration.
          minLength: 1
          maxLength: 20
          example: november-2020

    ErrorWrapper:
      title: ErrorWrapper
      type: object
      description: The error response object which gets returned in case of any error.
      required:
        - Errors
      properties:
        Errors:
          $ref: '#/components/schemas/Errors'
    Errors:
      title: Errors
      type: object
      description: Error object which contains list of Error objects.
      required:
        - Error
      properties:
        Error:
          type: array
          items:
            $ref: '#/components/schemas/Error'
    Error:
      title: Error
      type: object
      description: Error object which contains details about single error.
      required:
        - Source
        - ReasonCode
        - Description
        - Recoverable
      properties:
        Source:
          type: string
          description: The application name that generated this error. If an error is generated and returned by the gateway, then this field will have value as `Gateway`. Other possible values are `CARBON CALCULATOR`, `DONATE`, `PRICELESS PLANET CARBON TRACKER` or `PRICELESS PLANET`.
          minLength: 1
          maxLength: 100
          example: 'Carbon Tracker'
        ReasonCode:
          type: string
          description: A unique constant identifying the error case encountered during request processing.
          minLength: 1
          maxLength: 100
          example: 'INVALID_REQUEST_PARAMETER'
        Description:
          type: string
          description: Short description of the `ReasonCode` field.
          minLength: 10
          maxLength: 1000
          example: One of the request parameters is invalid, try again with correct request.
        Recoverable:
          type: boolean
          description: Indicates whether this error will always be returned for this request, or retrying could change the outcome.
          example: false
        Details:
          type: string
          description: (Optional) Where appropriate, indicates detailed information about data received and calculated during request processing, to help the user with diagnosing errors.
          minLength: 0
          maxLength: 5000
          example: email must not be null.
  parameters:
    UserID:
      in: path
      name: userid
      description: Unique identifier for a user enrolled into Priceless Planet Carbon Tracker platform.
      required: true
      example: f5d88571-ac15-465a-a0d8-1ad1327b9a06
      schema:
        $ref: '#/components/schemas/UserID'
  responses:
    Dashboard:
      description: The response object contains Short-Live URL along with authentication token.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Dashboard'
    UserReference:
      description: The response object that contains Payment Card information after successful registration.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserReference'
    AggregateCarbonScore:
      description: The response object contains aggregation of carbon footprint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AggregateCarbonScore'
          examples:
            AggregateCarbonScores:
              $ref: '#/components/examples/AggregateCarbonScore'

    UserEnrolmentBadRequestError:
      description: This response code is returned when a request is invalid or data in the request is not valid or a card/user is already registered on the server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            BadRequestError:
              $ref: '#/components/examples/BadRequestError'
            RequestDecryptionError:
              $ref: '#/components/examples/RequestDecryptionError'

    BadRequestError:
      description: This response code is returned when a request is invalid or data in the request is not valid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            BadRequestError:
              $ref: '#/components/examples/BadRequestError'
    UserNotFoundError:
      description: This response code is returned when a user not found or been removed
      content:
        application/json:
          examples:
            UserNotFoundError:
              $ref: '#/components/examples/UserNotFoundError'
          schema:
            $ref: '#/components/schemas/ErrorWrapper'

  examples:
    AggregateCarbonScore:
      value:
        carbonEmissionInGrams: 32.45
        aggregateDate: november-2020

    UserNotFoundError:
      value:
        Errors:
          Error:
            - Source: 'PRICELESS PLANET CARBON TRACKER'
              ReasonCode: 'USER_NOT_FOUND'
              Description: 'We cannot find user details for provided userId. Kindly register user through enrolment process.'
              Recoverable: false
              Details: 'Make sure user is enrolled through /users API endpoint.'
    RequestDecryptionError:
      value:
        Errors:
          Error:
            - Source: 'PRICELESS PLANET CARBON TRACKER'
              ReasonCode: 'CRYPTO_ERROR'
              Description: 'We are unable to decipher your request, kindly verify your request before trying again. If the problem persist then reach out to your Mastercard associate.'
              Recoverable: false
              Details: ''
    BadRequestError:
      value:
        Errors:
          Error:
            - Source: 'PRICELESS PLANET CARBON TRACKER'
              ReasonCode: 'INVALID_REQUEST_PARAMETER'
              Description: 'One of the request parameters is invalid, try again with correct request.'
              Recoverable: false
              Details: 'email must not be null'
