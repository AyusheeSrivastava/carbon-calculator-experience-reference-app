openapi: 3.0.3
info:
  title: Priceless Planet Carbon Tracker API
  description: |
    OpenAPI document for Priceless Planet Carbon Tracker Service. This API allows issuers to enrol their customers onto Priceless Planet Carbon Tracker platform so that they can get carbon footprint for their transactions and offset the same by donating for planting tree.

    In addition, this API also allows issuers to retrieve carbon footprint aggregate data for their customers.
      <br/>
    ---
    * **All requests must be signed using OAuth 1.0a. Please refer to [Access Mastercard APIs](https://developer.mastercard.com/platform/documentation/using-oauth-1a-to-access-mastercard-apis/).**
    ---
    * **The issuer must provide their user's card details and email address while enrolment. These details must be encrypted before entering transit. Please refer to the [Payload Encryption](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/).**
    ---

  contact:
    name: API Support
    url: https://developer.mastercard.com/
    email: apisupport@mastercard.com
  version: '1.0.0'
servers:
  - url: https://api.mastercard.com/carbontracker
    description: Production
  - url: https://sandbox.api.mastercard.com/carbontracker
    description: Sandbox
tags:
  - name: Issuer
    description: Contains APIs which will be consumed by the Issuer's backend system.


paths:
  /issuers:
    put:
      tags:
        - Issuer
      summary: Allows issuer to update their nformation onto Carbon Calculator Expereince Service.
      description: Allows a registered issuer to update their configuration onto Carbon Calculator Expereince Service.
      operationId: updateIssuer
      requestBody:
        $ref: '#/components/requestBodies/IssuerConfiguration'
      responses:
        "200":
          $ref: '#/components/responses/IssuerProfile'
        "400":
          $ref: '#/components/responses/UpdateIssuerBadRequestError'
        "401":
          $ref: '#/components/responses/UpdateIssuerUnauthorisedError'
        "404":
          $ref: '#/components/responses/IssuerNotFoundError'
        "415":
          $ref: '#/components/responses/UnsupportedMediaTypeError'

    get:
      tags:
        - Issuer
      summary: Used to get the issuer details.
      description: Allows to get issuer details onboarded on Carbon Calculator Experience.
      operationId: getIssuer
      responses:
        "200":
          $ref: '#/components/responses/IssuerProfileDetails'
        "404":
          $ref: '#/components/responses/IssuerNotFoundError'
  /issuers/users:
    post:
      tags:
        - Issuer
      summary: Allows issuer to enrol their customers onto Priceless Planet Carbon Tracker platform.
      description: Used to enrol users for Priceless Planet Carbon Tracker so that they can track the carbon usage for their transactions and offset the same by donating for planting tree.
      operationId: UserRegistration
      x-mastercard-api-encrypted: true
      requestBody:
        $ref: '#/components/requestBodies/UserProfile'
      responses:
        "200":
          $ref: '#/components/responses/UserReference'
        "400":
          $ref: '#/components/responses/UserEnrolmentBadRequestError'
        "401":
          $ref: '#/components/responses/UserEnrolmentUnauthorisedError'
        "404":
          $ref: '#/components/responses/IssuerNotFoundError'
        "415":
          $ref: '#/components/responses/UnsupportedMediaTypeError'

  /issuers/users/{userid}/dashboards:
    get:
      tags:
        - Issuer
      summary: Used to retrieve Short-Lived URL of user's dashboard to view their carbon footprints and contributions to Priceless Planet.
      description: Allows issuers to retrieve Short-Lived URL for an enrolled user. Issuer needs to load this URL within their application so that user can view their dashboard containing carbon footprints and donation.
      operationId: GetAuthToken
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        "200":
          $ref: '#/components/responses/Dashboard'
        "400":
          $ref: '#/components/responses/BadRequestError'
        "404":
          $ref: '#/components/responses/UserNotFoundError'

  /issuers/users/{userid}/aggregate-carbon-scores:
    get:
      tags:
        - Issuer
      summary: Fetches monthly aggregate carbon score for the transactions.
      description: Allows issuers to retrieve an aggregate carbon footprint for the transactions done by a user.
      operationId: GetAggregateCarbonScore
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        "200":
          $ref: '#/components/responses/AggregateCarbonScore'
        "400":
          $ref: '#/components/responses/BadRequestError'
        "404":
          $ref: '#/components/responses/UserNotFoundError'

  /issuers/user-deletions:
    post:
      tags:
        - Issuer
      summary: Delete one or more users
      description: Allows a registered Service Provider to delete one or more users. Payment cards associated user will also be deleted.
        On successful response from server, a Service Provider should remove all the requested users and associated payment cards from its system.

      operationId: deleteUsers
      requestBody:
        $ref: '#/components/requestBodies/UserIDs'
      responses:
        "202":
          $ref: '#/components/responses/UserIDs'
        "400":
          $ref: '#/components/responses/DeleteUserBadRequestError'
        "401":
          $ref: '#/components/responses/DeleteUserUnauthorisedError'
        "404":
          $ref: '#/components/responses/DeleteUserNotFoundError'
        "415":
          $ref: '#/components/responses/UnsupportedMediaTypeError'
components:
  requestBodies:
    UserProfile:
      description: User's Personal and Card information which needs to be registered onto Priceless Planet Carbon Tracker platform. This endpoint uses Mastercard payload encryption. Please refer to the **[Payload Encryption](https://mstr.cd/2UPfda0)** page for implementation details.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserProfile'
    IssuerConfiguration:
      description: Configuration details for issuer which needs to be update. It should contain only those parameters which you want to update.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssuerConfiguration'
    UserIDs:
      description: List of user ids
      required: true
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/UserID'
            minItems: 1
            maxItems: 500
          examples:
            UserIDs:
              $ref: '#/components/examples/UserIDs'
  schemas:
    UserProfile:
      title: UserProfile
      type: object
      description: The request object for enrolling a new user onto Priceless Planet Carbon Tracker platform.
      required:
        - cardNumber
        - billingAddress
        - email
        - locale
        - name
        - expiryInfo
        - cardBaseCurrency
        - cardholderName
      properties:
        email:
          $ref: '#/components/schemas/Email'
        name:
          $ref: '#/components/schemas/UserName'
        cardholderName:
          type: string
          description: Name of the card holder. (format- First Name Last Name)
          minLength: 1
          maxLength: 100
          example: John Doe
        cardNumber:
          $ref: '#/components/schemas/CardNumber'
        cardBaseCurrency:
          $ref: '#/components/schemas/CurrencyCode'
        expiryInfo:
          $ref: '#/components/schemas/CardExpiry'
        billingAddress:
          $ref: '#/components/schemas/Address'
        locale:
          type: string
          description: User locale which is registered with issuer.
          minLength: 1
          maxLength: 100
          example: en-US
    CountryName:
      type: string
      description: ISO 3166 country short name
      pattern: ^[a-zA-Z\s\\(\\),\\.]+$
      minLength: 3
      maxLength: 50
      example: Brazil
    IssuerProfileDetails:
      title: IssuerProfileDetails
      type: object
      description: Information about an issuer as available on the server.
      required:
        - clientId
        - issuerName
        - supportedAccountRange
        - callbackUrl
        - status
        - email
        - currencyCode
        - countryCode
        - countryName
        - termsAndConditionURL
        - privacyNoticeURL
        - optOutURL
      properties:
        clientId:
          type: string
          minLength: 1
          maxLength: 200
          pattern: ^[\w\d\-\_]{1,200}
          description: Unique issuer identifier from the Mastercard Developer Portal.
          example: 'fjl2fxzsYl1OpvxkBItC9nVw1PSQc_b-eQMcmQFg011ab4b5'
        customerId:
          type: string
          minLength: 1
          maxLength: 200
          pattern: ^[\w\d]{1,200}
          description: Unique issuer identifier assigned by Mastercard which remains same across all Mastercard systems.
          example: 'customerid1'
        supportedAccountRange:
          type: string
          pattern: ^[0-9]{4,8}(,[0-9]{4,8})*$
          description: Comma separated account range must be between 4 and 8 supported by an issuer.
          example: '534403, 518145, 518152, 5403, 5424'
        callbackUrl:
          type: string
          minLength: 0
          maxLength: 2083
          description: A service URL which has been made available by an issuer so that it can receive latest transaction score information from server.
          example: ''
        status:
          type: string
          minLength: 6
          maxLength: 9
          description: Status of an issuer on the server. Possible values are ACTIVE & SUSPENDED.
          example: 'ACTIVE'
        email:
          type: string
          minLength: 1
          maxLength: 10
          description: Issuers email address
          example: 'xyz@abc.com'
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
        countryCode:
          title: countryCode
          type: string
          description: DE 19 (Acquiring Institution Country Code) is the code of the country where the acquiring institution is located.
          maxLength: 3
          minLength: 3
          example: USA
        countryName:
          $ref: '#/components/schemas/CountryName'
        privacyNoticeURL:
          type: string
          example: "https://www.issuer.privacy-policy-url.html"
          description: Privacy notice url.
        termsAndConditionURL:
          type: string
          example: "https://www.issuer.term-and-conditions.html"
          description: Terms and condition urk for the given user.
        optOutURL:
          type: string
          example: "https://www.issuer.opt-out-url.html"
          description: Opt out url for the given user.
    IssuerConfiguration:
      title: IssuerConfiguration
      type: object
      description: Configuration details for an Issuer.
      properties:
        supportedAccountRange:
          type: string
          pattern: ^[0-9]{4,8}(,[0-9]{4,8})*$
          description: Comma separated account range must be between 4 and 8 supported by an issuer.
          example: '534403, 518145, 518152, 5403, 5424'
        callbackUrl:
          type: string
          minLength: 0
          maxLength: 2083
          description: A service URL that can receive transaction score information from Mastercard in near real-time.
          example: 'https://www.abcbank.com/payment-cards/notify-transaction-footprints'
    CurrencyCode:
      title: currencyCode
      type: string
      description: Currency code as per ISO 4217
      maxLength: 3
      minLength: 3
      pattern: '^[A-Za-z]{3}$'
      example: EUR
    CardExpiry:
      type: object
      properties:
        month:
          type: string
          example: 10
          description: Denotes a month by when the card will be expired.
          pattern: '^[0-9]{2}$'
        year:
          type: string
          description: Denotes a year by when the card will be expired.
          example: 2024
          pattern: '^[0-9]{4}$'
      title: CardExpiry
    CardNumber:
      type: string
      minLength: 16
      maxLength: 16
      pattern: '^\d{16}$'
      description: Original payment card number in full.
      example: 5344035171229750
    Address:
      type: object
      required:
        - country
        - postalCode
        - type
        - locality
      properties:
        country:
          description: The addresses country in two-character ISO 3166-1 alpha-2 format.
          type: string
          example: USA
          minLength: 1
          maxLength: 10
        locality:
          description: The city, district, suburb, town or village of the address.
          type: string
          minLength: 1
          maxLength: 100
          example: Rly Station
        postalCode:
          description: The address postal code, which is the zip code or equivalent.
          type: string
          example: 11746
          minLength: 1
          maxLength: 10
        region:
          type: string
          description: The region to which the address belongs to.
          example: Huntington
          minLength: 1
          maxLength: 100
        streetAddress:
          type: string
          description: Denotes street address.
          minLength: 1
          maxLength: 100
          example: 7832 West Elm Street
        type:
          type: string
          description: Denotes type of address. (e.g. home or work)
          example: 'work'
          minLength: 1
          maxLength: 100
      title: Address
    Email:
      type: object
      properties:
        type:
          type: string
          description: Denotes type of email (e.g. home)
          minLength: 1
          maxLength: 10
          example: home
        value:
          type: string
          description: Denotes email address.
          minLength: 5
          maxLength: 100
          example: John.Doe@mail.com
      title: Email
    UserName:
      type: object
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: string
          example: John
          minLength: 1
          maxLength: 100
          description: Denotes First name of user.
        lastName:
          type: string
          description: Denotes Last name of user.
          minLength: 1
          maxLength: 100
          example: Doe
      title: Username

    IssuerProfile:
      title: IssuerProfile
      type: object
      description: Information about an issuer as available on the server.
      required:
        - clientId
        - issuerName
        - supportedAccountRange
        - callbackUrl
        - status
      properties:
        clientId:
          type: string
          minLength: 1
          maxLength: 200
          pattern: ^[\w\d\-\_]{1,200}
          description: Unique issuer identifier from the Mastercard Developer Portal.
          example: 'fjl2fxzsYl1OpvxkBItC9nVw1PSQc_b-eQMcmQFg011ab4b5'
        customerId:
          type: string
          minLength: 1
          maxLength: 200
          pattern: ^[\w\d]{1,200}
          description: Unique issuer identifier assigned by Mastercard which remains same across all Mastercard systems.
          example: 'customerid1'
        supportedAccountRange:
          type: string
          pattern: ^[0-9]{4,8}(,[0-9]{4,8})*$
          description: Comma separated account range must be between 4 and 8 supported by an issuer.
          example: '534403, 518145, 518152, 5403, 5424'
        callbackUrl:
          type: string
          minLength: 0
          maxLength: 2083
          description: A service URL which has been made available by an issuer so that it can receive latest transaction score information from server.
          example: ''
        status:
          type: string
          minLength: 6
          maxLength: 9
          description: Status of an issuer on the server. Possible values are ACTIVE & SUSPENDED.
          example: 'ACTIVE'
    UserReference:
      title: UserReference
      type: object
      description: Successful user enrolment response
      required:
        - cardNumberLastFourDigits
        - status
        - userid
      properties:
        userid:
          $ref: '#/components/schemas/UserID'
        cardNumberLastFourDigits:
          type: string
          pattern: '^\d{4}$'
          description: Last 4 digits of a full payment card number which was provided as enrolment request.
          example: 4363
        status:
          type: string
          minLength: 6
          maxLength: 7
          description: Status of a Payment Card on Carbon Calculator Expereince Service. Possible values are ACTIVE &amp; DELETED.
          example: ACTIVE
    UserID:
      type: string
      pattern: '^[0-9A-Fa-f-]{36}'
      description: Unique identifier for a user enrolled into Carbon Calculator Expereince Service.
      example: f5d88571-ac15-465a-a0d8-1ad1327b9a06

    Dashboard:
      type: object
      properties:
        url:
          type: string
          description: This is the URL which needs to be rendered in web view.
          minLength: 1
          maxLength: 5000
          example: https://ppctwebview.b221.net/home/?auth_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        expiryInMillis:
          type: string
          description: Denotes expiry limit for the URL.
          minLength: 1
          maxLength: 10
          example: 300000
    AggregateCarbonScore:
      type: object
      properties:
        carbonEmissionInGrams:
          type: string
          description: An aggregate value of CO2 emission in grams.
          minLength: 1
          maxLength: 10
          example: 3245
        aggregateDate:
          type: string
          description: Denotes aggregate duration.
          minLength: 1
          maxLength: 20
          example: november-2020

    ErrorWrapper:
      title: ErrorWrapper
      type: object
      description: The error response object which gets returned in case of any error.
      required:
        - Errors
      properties:
        Errors:
          $ref: '#/components/schemas/Errors'
    Errors:
      title: Errors
      type: object
      description: Error object which contains list of Error objects.
      required:
        - Error
      properties:
        Error:
          type: array
          items:
            $ref: '#/components/schemas/Error'
    Error:
      title: Error
      type: object
      description: Error object which contains details about single error.
      required:
        - Source
        - ReasonCode
        - Description
        - Recoverable
      properties:
        Source:
          type: string
          description: The application name that generated this error. If an error is generated and returned by the gateway, then this field will have value as `Gateway`. Other possible values are `CARBON CALCULATOR`, `DONATE`, `PRICELESS PLANET CARBON TRACKER` or `PRICELESS PLANET`.
          minLength: 1
          maxLength: 100
          example: 'Carbon Tracker'
        ReasonCode:
          type: string
          description: A unique constant identifying the error case encountered during request processing.
          minLength: 1
          maxLength: 100
          example: 'INVALID_REQUEST_PARAMETER'
        Description:
          type: string
          description: Short description of the `ReasonCode` field.
          minLength: 10
          maxLength: 1000
          example: One of the request parameters is invalid, try again with correct request.
        Recoverable:
          type: boolean
          description: Indicates whether this error will always be returned for this request, or retrying could change the outcome.
          example: false
        Details:
          type: string
          description: (Optional) Where appropriate, indicates detailed information about data received and calculated during request processing, to help the user with diagnosing errors.
          minLength: 0
          maxLength: 5000
          example: email must not be null.
  parameters:
    UserID:
      in: path
      name: userid
      description: Unique identifier for a user enrolled into Priceless Planet Carbon Tracker platform.
      required: true
      example: f5d88571-ac15-465a-a0d8-1ad1327b9a06
      schema:
        $ref: '#/components/schemas/UserID'

  responses:
    Dashboard:
      description: The response object contains Short-Live URL along with authentication token.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Dashboard'
    IssuerProfileDetails:
      description: 'The response object that contains latest information of an issuer as available on server.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssuerProfileDetails'
          examples:
            IssuerDetails:
              $ref: '#/components/examples/IssuerDetails'
    IssuerNotFoundError:
      description: This response code is returned when server cannot find the account which has been used to call this API.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            IssuerNotFoundError:
              $ref: '#/components/examples/IssuerNotFoundError'
    IssuerProfile:
      description: 'The response object that contains latest information of an issuer as available on server.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssuerProfile'
          examples:
            IssuerWithCallbackUrl:
              $ref: '#/components/examples/IssuerWithCallbackUrl'
            IssuerWithoutCallbackUrl:
              $ref: '#/components/examples/IssuerWithoutCallbackUrl'
    UserIDs:
      description: The response object contains list user ids
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/UserID'
          examples:
            DeletedUserIDs:
              $ref: '#/components/examples/UserIDs'
    UserReference:
      description: The response object that contains Payment Card information after successful registration.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserReference'
    AggregateCarbonScore:
      description: The response object contains aggregation of carbon footprint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AggregateCarbonScore'
          examples:
            AggregateCarbonScores:
              $ref: '#/components/examples/AggregateCarbonScore'

    UserEnrolmentBadRequestError:
      description: This response code is returned when a request is invalid or data in the request is not valid or a card/user is already registered on the server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            BadRequestError:
              $ref: '#/components/examples/BadRequestError'
            RequestDecryptionError:
              $ref: '#/components/examples/RequestDecryptionError'

    BadRequestError:
      description: This response code is returned when a request is invalid or data in the request is not valid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            BadRequestError:
              $ref: '#/components/examples/BadRequestError'
    UpdateIssuerUnauthorisedError:
      description: This response code is returned for unauthorized isuuer.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            IssuerInactiveError:
              $ref: '#/components/examples/IssuerInactiveError'

    UserNotFoundError:
      description: This response code is returned when a user not found or been removed
      content:
        application/json:
          examples:
            UserNotFoundError:
              $ref: '#/components/examples/UserNotFoundError'
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
    DeleteUserBadRequestError:
      description: This response code is returned when a request is invalid or data in the request is not valid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            UserCountError:
              $ref: '#/components/examples/UserCountError'
    DeleteUserUnauthorisedError:
      description: This response code is returned when a user terminated or in active.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            IssuerInactiveError:
              $ref: '#/components/examples/IssuerInactiveError'
    DeleteUserNotFoundError:
      description: This response code is returned when a user or issuer is not present.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            IssuerNotFoundError:
              $ref: '#/components/examples/IssuerNotFoundError'
    UnsupportedMediaTypeError:
      description: This response code is returned when the MediaType in request is other than application/json.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            UnsupportedMediaTypeError:
              $ref: '#/components/examples/UnsupportedMediaTypeError'
    UserEnrolmentUnauthorisedError:
      description: This response code is returned for unauthorized isuuer.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            IssuerInactiveError:
              $ref: '#/components/examples/IssuerInactiveError'
    UpdateIssuerBadRequestError:
      description: This response code is returned when either a request is invalid or data provided in the request is in invalid format.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            IssuerInvalidAccountRangeError:
              $ref: '#/components/examples/IssuerInvalidAccountRangeError'
            IssuerInvalidAccountRangeLengthError:
              $ref: '#/components/examples/IssuerInvalidAccountRangeLengthError'

  examples:
    AggregateCarbonScore:
      value:
        carbonEmissionInGrams: 32.45
        aggregateDate: november-2020
    IssuerDetails:
      value:
        clientId: 'fjl2fxzsYl1OpvxkBItC9nVw1PSQc_b-eQMcmQFg011ab4b5'
        customerId: ''
        issuerName: 'ABC Bank'
        supportedAccountRange: '534403, 518145, 518152, 5403, 5424'
        callbackUrl: 'https://www.abcbank.com/payment-cards/notify-transaction-footprints'
        status: 'ACTIVE'
        email: 'xyz@abc.com'
        currencyCode: 'USD'
        countryCode: 'USA'
        termsAndConditionURL: 'https://www.issuer.term-and-conditions.html'
        privacyNoticeURL: 'https://www.issuer.privacy-policy-url.html'
        optOutURL: 'https://www.issuer.opt-out-url.html'
    IssuerWithoutCallbackUrl:
      value:
        clientId: 'fjl2fxzsYl1OpvxkBItC9nVw1PSQc_b-eQMcmQFg011ab4b5'
        customerId: ''
        issuerName: 'ABC Bank'
        supportedAccountRange: '534403, 518145, 518152, 5403, 5424'
        callbackUrl: ''
        status: 'ACTIVE'
    IssuerWithCallbackUrl:
      value:
        clientId: 'fjl2fxzsYl1OpvxkBItC9nVw1PSQc_b-eQMcmQFg011ab4b5'
        customerId: ''
        issuerName: 'ABC Bank'
        supportedAccountRange: '534403, 518145, 518152, 5403, 5424'
        callbackUrl: 'https://www.abcbank.com/payment-cards/notify-transaction-footprints'
        status: 'ACTIVE'

    UserNotFoundError:
      value:
        Errors:
          Error:
            - Source: 'PRICELESS PLANET CARBON TRACKER'
              ReasonCode: 'USER_NOT_FOUND'
              Description: 'We cannot find user details for provided userId. Kindly register user through enrolment process.'
              Recoverable: false
              Details: 'Make sure user is enrolled through /users API endpoint.'
    RequestDecryptionError:
      value:
        Errors:
          Error:
            - Source: 'PRICELESS PLANET CARBON TRACKER'
              ReasonCode: 'CRYPTO_ERROR'
              Description: 'We are unable to decipher your request, kindly verify your request before trying again. If the problem persist then reach out to your Mastercard associate.'
              Recoverable: false
              Details: ''
    BadRequestError:
      value:
        Errors:
          Error:
            - Source: 'PRICELESS PLANET CARBON TRACKER'
              ReasonCode: 'INVALID_REQUEST_PARAMETER'
              Description: 'One of the request parameters is invalid, try again with correct request.'
              Recoverable: false
              Details: 'email must not be null'
    UserCountError:
      value:
        Errors:
          Error:
            - Source: 'CARBON CALCULATOR EXPERIENCE'
              ReasonCode: 'INVALID_REQUEST_PARAMETER'
              Description: 'One of the request parameters is invalid, try again with correct request.'
              Recoverable: true
              Details: 'Request body should have at least 1 or not more than 500 userIds'
    IssuerInactiveError:
      value:
        Errors:
          Error:
            - Source: 'CARBON CALCULATOR EXPERIENCE'
              ReasonCode: 'ACCOUNT_INACTIVE'
              Description: "Your account is inactive, kindly contact your Mastercard associate to activate it. Until then you won't be able to access any service."
              Recoverable: false
              Details: "Your account is inactive, kindly contact your Mastercard associate to activate it. Until then you won't be able to access any service."
    IssuerNotFoundError:
      value:
        Errors:
          Error:
            - Source: 'CARBON CALCULATOR EXPERIENCE'
              ReasonCode: 'ACCOUNT_NOT_FOUND'
              Description: 'Account Id is not Identified'
              Recoverable: false
              Details: 'We cannot find the account which you are using to access this service. Kindly register your account or contact your Mastercard associate if you have already registered with us earlier.'

    UnsupportedMediaTypeError:
      value:
        Errors:
          Error:
            - Source: 'CARBON CALCULATOR EXPERIENCE'
              ReasonCode: 'UNSUPPORTED_MEDIA_TYPE'
              Description: 'Requested media type is not supported, try again with supported media type.'
              Recoverable: false
              Details: ''
    IssuerInvalidAccountRangeError:
      value:
        Errors:
          Error:
            - Source: 'Carbon-Calculator'
              ReasonCode: 'SERVICE_PROVIDER_ACCOUNT_RANGES_ALREADY_EXIST'
              Description: 'Service Provider with supported account range [1234] already exists.'
              Recoverable: false
              Details: ''
    IssuerInvalidAccountRangeLengthError:
      value:
        Errors:
          Error:
            - Source: 'CARBON CALCULATOR EXPERIENCE'
              ReasonCode: 'INVALID_REQUEST_PARAMETER'
              Description: 'One of the request parameters is invalid, try again with correct request.'
              Recoverable: false
              Details: 'Each value in supportedAccountRange must be numeric and size should be between 4 and 8'

    UserIDs:
      value: [ "4ba581a55-bcea-4c3e-8e0f-9b4726e5e6d3",
               "c5d88571-ac15-465a-a0d8-1ad1327b9a06" ]
